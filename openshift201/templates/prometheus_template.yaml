apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: prometheus-template
message: >-
  The following service(s) have been created in your project:
  ${GRAFANA_SERVICE_NAME}.

  For more information about using this template, including OpenShift
  considerations, contact the rocketchat community.
metadata:
  annotations:
    description: >-
      Grafana Template for use in OpenShift 201 lab without persistent storage. 


      WARNING: Any configuration stored will be lost upon pod destruction.
      ConfigMaps should be used for codified configuration. 
    iconClass: icon-other-unknown
    openshift.io/display-name: prometheus-openshift201
    openshift.io/documentation-url: 'https://github.com/bcdevops/devops-platform-workshops'
    openshift.io/long-description: This template provides a sample Grafana configuration for lab purposes.
    openshift.io/provider-display-name: BCDevOps
    openshift.io/support-url: 'https://github.com/bcdevops/'
    tags: 'monitoring,prometheus'
  name: prometheus-template
parameters:
  - description: The namespace this templated is deployed into.
    displayName: Namespace
    name: NAMESPACE
  - description: The name of the Prometheus service to connect to.
    displayName: Prometheus Service Name
    name: PROMETHEUS_SERVICE_NAME
    value: prometheus
  - description: Default route subdomain
    displayName: Route subdomain
    name: ROUTE_SUBDOMAIN
    value: pathfinder.gov.bc.ca
objects:
  - apiVersion: v1
    kind: Service
    spec:
      ports:
        - name: http
          port: 80
          protocol: TCP
          targetPort: 9090
      selector:
        app: prometheus
        component: maxwardle-prometheus
        release: maxwardle-prometheus
      sessionAffinity: None
      type: ClusterIP
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-9.1.2","component":"maxwardle-prometheus","heritage":"Tiller","release":"maxwardle-prometheus"},"name":"maxwardle-prometheus-maxwardle-prometheus","namespace":"4zq6uj-maxwardle-ocp201-tst-dev"},"spec":{"ports":[{"name":"http","port":80,"protocol":"TCP","targetPort":9090}],"selector":{"app":"prometheus","component":"maxwardle-prometheus","release":"maxwardle-prometheus"},"type":"ClusterIP"}}
      labels:
        app: prometheus
        chart: prometheus-9.1.2
        component: maxwardle-prometheus
        heritage: Tiller
        release: maxwardle-prometheus
      name: maxwardle-prometheus-maxwardle-prometheus
  - apiVersion: apps/v1
    kind: Deployment
    spec:
      progressDeadlineSeconds: 600
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        matchLabels:
          app: prometheus
          component: maxwardle-prometheus
          release: maxwardle-prometheus
      strategy:
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 1
        type: RollingUpdate
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: prometheus
            chart: prometheus-9.1.2
            component: maxwardle-prometheus
            heritage: Tiller
            release: maxwardle-prometheus
        spec:
          containers:
            - args:
                - '--volume-dir=/etc/config'
                - '--webhook-url=http://127.0.0.1:9090/-/reload'
              image: 'jimmidyson/configmap-reload:v0.2.2'
              imagePullPolicy: IfNotPresent
              name: prometheus-maxwardle-prometheus-configmap-reload
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/config
                  name: config-volume
                  readOnly: true
            - args:
                - '--storage.tsdb.retention.time=15d'
                - '--config.file=/etc/config/prometheus.yml'
                - '--storage.tsdb.path=/data'
                - '--web.console.libraries=/etc/prometheus/console_libraries'
                - '--web.console.templates=/etc/prometheus/consoles'
                - '--web.enable-lifecycle'
              image: 'prom/prometheus:v2.11.1'
              imagePullPolicy: IfNotPresent
              livenessProbe:
                failureThreshold: 3
                httpGet:
                  path: /-/healthy
                  port: 9090
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 30
              name: prometheus-maxwardle-prometheus
              ports:
                - containerPort: 9090
                  protocol: TCP
              readinessProbe:
                failureThreshold: 3
                httpGet:
                  path: /-/ready
                  port: 9090
                  scheme: HTTP
                initialDelaySeconds: 30
                periodSeconds: 10
                successThreshold: 1
                timeoutSeconds: 30
              resources: {}
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /etc/config
                  name: config-volume
                - mountPath: /data
                  name: storage-volume
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          serviceAccount: default
          serviceAccountName: default
          terminationGracePeriodSeconds: 300
          volumes:
            - configMap:
                defaultMode: 420
                name: maxwardle-prometheus-maxwardle-prometheus
              name: config-volume
            - name: storage-volume
              persistentVolumeClaim:
                claimName: maxwardle-prometheus-maxwardle-prometheus
    metadata:
      annotations:
        deployment.kubernetes.io/revision: '2'
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"extensions/v1beta1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-9.1.2","component":"maxwardle-prometheus","heritage":"Tiller","release":"maxwardle-prometheus"},"name":"maxwardle-prometheus-maxwardle-prometheus","namespace":"4zq6uj-maxwardle-ocp201-tst-dev"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"prometheus","component":"maxwardle-prometheus","release":"maxwardle-prometheus"}},"template":{"metadata":{"labels":{"app":"prometheus","chart":"prometheus-9.1.2","component":"maxwardle-prometheus","heritage":"Tiller","release":"maxwardle-prometheus"}},"spec":{"containers":[{"args":["--volume-dir=/etc/config","--webhook-url=http://127.0.0.1:9090/-/reload"],"image":"jimmidyson/configmap-reload:v0.2.2","imagePullPolicy":"IfNotPresent","name":"prometheus-maxwardle-prometheus-configmap-reload","resources":{},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume","readOnly":true}]},{"args":["--storage.tsdb.retention.time=15d","--config.file=/etc/config/prometheus.yml","--storage.tsdb.path=/data","--web.console.libraries=/etc/prometheus/console_libraries","--web.console.templates=/etc/prometheus/consoles","--web.enable-lifecycle"],"image":"prom/prometheus:v2.11.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/-/healthy","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"name":"prometheus-maxwardle-prometheus","ports":[{"containerPort":9090}],"readinessProbe":{"httpGet":{"path":"/-/ready","port":9090},"initialDelaySeconds":30,"timeoutSeconds":30},"resources":{},"volumeMounts":[{"mountPath":"/etc/config","name":"config-volume"},{"mountPath":"/data","name":"storage-volume","subPath":""}]}],"serviceAccountName":"default","terminationGracePeriodSeconds":300,"volumes":[{"configMap":{"name":"maxwardle-prometheus-maxwardle-prometheus"},"name":"config-volume"},{"name":"storage-volume","persistentVolumeClaim":{"claimName":"maxwardle-prometheus-maxwardle-prometheus"}}]}}}}
      generation: 2
      labels:
        app: prometheus
        chart: prometheus-9.1.2
        component: maxwardle-prometheus
        heritage: Tiller
        release: maxwardle-prometheus
      name: maxwardle-prometheus-maxwardle-prometheus
  - apiVersion: route.openshift.io/v1
    kind: Route
    spec:
      host: prometheus-4zq6uj-maxwardle-ocp201-tst-dev.pathfinder.gov.bc.ca
      port:
        targetPort: http
      to:
        kind: Service
        name: maxwardle-prometheus-maxwardle-prometheus
        weight: 100
      wildcardPolicy: None
    metadata:
      annotations:
        openshift.io/host.generated: 'true'
      labels:
        app: prometheus
      name: prometheus
  - apiVersion: v1
    data:
      alerts: |
        {}
      prometheus.yml: >
        global:
          evaluation_interval: 1m
          scrape_interval: 1m
          scrape_timeout: 10s
        rule_files:

        - /etc/config/rules

        - /etc/config/alerts

        scrape_configs:

        - job_name: prometheus
          static_configs:
          - targets:
            - localhost:9090
        # - bearer_token_file:
        /var/run/secrets/kubernetes.io/serviceaccount/token

        #   job_name: kubernetes-apiservers

        #   kubernetes_sd_configs:

        #   - role: endpoints

        #   relabel_configs:

        #   - action: keep

        #     regex: default;kubernetes;https

        #     source_labels:

        #     - __meta_kubernetes_namespace

        #     - __meta_kubernetes_service_name

        #     - __meta_kubernetes_endpoint_port_name

        #   scheme: https

        #   tls_config:

        #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        #     insecure_skip_verify: true

        # - bearer_token_file:
        /var/run/secrets/kubernetes.io/serviceaccount/token

        #   job_name: kubernetes-nodes

        #   kubernetes_sd_configs:

        #   - role: node

        #   relabel_configs:

        #   - action: labelmap

        #     regex: __meta_kubernetes_node_label_(.+)

        #   - replacement: kubernetes.default.svc:443

        #     target_label: __address__

        #   - regex: (.+)

        #     replacement: /api/v1/nodes/$1/proxy/metrics

        #     source_labels:

        #     - __meta_kubernetes_node_name

        #     target_label: __metrics_path__

        #   scheme: https

        #   tls_config:

        #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        #     insecure_skip_verify: true

        # - bearer_token_file:
        /var/run/secrets/kubernetes.io/serviceaccount/token

        #   job_name: kubernetes-nodes-cadvisor

        #   kubernetes_sd_configs:

        #   - role: node

        #   relabel_configs:

        #   - action: labelmap

        #     regex: __meta_kubernetes_node_label_(.+)

        #   - replacement: kubernetes.default.svc:443

        #     target_label: __address__

        #   - regex: (.+)

        #     replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor

        #     source_labels:

        #     - __meta_kubernetes_node_name

        #     target_label: __metrics_path__

        #   scheme: https

        #   tls_config:

        #     ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt

        #     insecure_skip_verify: true

        # - job_name: kubernetes-service-endpoints

        #   kubernetes_sd_configs:

        #   - role: endpoints

        #   relabel_configs:

        #   - action: keep

        #     regex: true

        #     source_labels:

        #     - __meta_kubernetes_service_annotation_prometheus_io_scrape

        #   - action: replace

        #     regex: (https?)

        #     source_labels:

        #     - __meta_kubernetes_service_annotation_prometheus_io_scheme

        #     target_label: __scheme__

        #   - action: replace

        #     regex: (.+)

        #     source_labels:

        #     - __meta_kubernetes_service_annotation_prometheus_io_path

        #     target_label: __metrics_path__

        #   - action: replace

        #     regex: ([^:]+)(?::\d+)?;(\d+)

        #     replacement: $1:$2

        #     source_labels:

        #     - __address__

        #     - __meta_kubernetes_service_annotation_prometheus_io_port

        #     target_label: __address__

        #   - action: labelmap

        #     regex: __meta_kubernetes_service_label_(.+)

        #   - action: replace

        #     source_labels:

        #     - __meta_kubernetes_namespace

        #     target_label: kubernetes_namespace

        #   - action: replace

        #     source_labels:

        #     - __meta_kubernetes_service_name

        #     target_label: kubernetes_name

        #   - action: replace

        #     source_labels:

        #     - __meta_kubernetes_pod_node_name

        #     target_label: kubernetes_node

        # - honor_labels: true

        #   job_name: prometheus-pushgateway

        #   kubernetes_sd_configs:

        #   - role: service

        #   relabel_configs:

        #   - action: keep

        #     regex: pushgateway

        #     source_labels:

        #     - __meta_kubernetes_service_annotation_prometheus_io_probe

        # - job_name: kubernetes-services

        #   kubernetes_sd_configs:

        #   - role: service

        #   metrics_path: /probe

        #   params:

        #     module:

        #     - http_2xx

        #   relabel_configs:

        #   - action: keep

        #     regex: true

        #     source_labels:

        #     - __meta_kubernetes_service_annotation_prometheus_io_probe

        #   - source_labels:

        #     - __address__

        #     target_label: __param_target

        #   - replacement: blackbox

        #     target_label: __address__

        #   - source_labels:

        #     - __param_target

        #     target_label: instance

        #   - action: labelmap

        #     regex: __meta_kubernetes_service_label_(.+)

        #   - source_labels:

        #     - __meta_kubernetes_namespace

        #     target_label: kubernetes_namespace

        #   - source_labels:

        #     - __meta_kubernetes_service_name

        #     target_label: kubernetes_name

        - job_name: kubernetes-pods
          kubernetes_sd_configs:
          - role: pod
            namespaces:
                names:
                  - 4zq6uj-maxwardle-ocp201-tst-dev
          relabel_configs:
          - action: keep
            regex: true
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_scrape
          - action: replace
            regex: (.+)
            source_labels:
            - __meta_kubernetes_pod_annotation_prometheus_io_path
            target_label: __metrics_path__
          - action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            source_labels:
            - __address__
            - __meta_kubernetes_pod_annotation_prometheus_io_port
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - action: replace
            source_labels:
            - __meta_kubernetes_namespace
            target_label: kubernetes_namespace
          - action: replace
            source_labels:
            - __meta_kubernetes_pod_name
            target_label: kubernetes_pod_name
      rules: |
        {}
    kind: ConfigMap
    metadata:
      annotations:
        kubectl.kubernetes.io/last-applied-configuration: >
          {"apiVersion":"v1","data":{"alerts":"{}\n","prometheus.yml":"global:\n 
          evaluation_interval: 1m\n  scrape_interval: 1m\n  scrape_timeout:
          10s\nrule_files:\n- /etc/config/rules\n-
          /etc/config/alerts\nscrape_configs:\n- job_name: prometheus\n 
          static_configs:\n  - targets:\n    - localhost:9090\n# -
          bearer_token_file:
          /var/run/secrets/kubernetes.io/serviceaccount/token\n#   job_name:
          kubernetes-apiservers\n#   kubernetes_sd_configs:\n#   - role:
          endpoints\n#   relabel_configs:\n#   - action: keep\n#     regex:
          default;kubernetes;https\n#     source_labels:\n#     -
          __meta_kubernetes_namespace\n#     -
          __meta_kubernetes_service_name\n#     -
          __meta_kubernetes_endpoint_port_name\n#   scheme: https\n#  
          tls_config:\n#     ca_file:
          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n#    
          insecure_skip_verify: true\n# - bearer_token_file:
          /var/run/secrets/kubernetes.io/serviceaccount/token\n#   job_name:
          kubernetes-nodes\n#   kubernetes_sd_configs:\n#   - role: node\n#  
          relabel_configs:\n#   - action: labelmap\n#     regex:
          __meta_kubernetes_node_label_(.+)\n#   - replacement:
          kubernetes.default.svc:443\n#     target_label: __address__\n#   -
          regex: (.+)\n#     replacement: /api/v1/nodes/$1/proxy/metrics\n#    
          source_labels:\n#     - __meta_kubernetes_node_name\n#    
          target_label: __metrics_path__\n#   scheme: https\n#  
          tls_config:\n#     ca_file:
          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n#    
          insecure_skip_verify: true\n# - bearer_token_file:
          /var/run/secrets/kubernetes.io/serviceaccount/token\n#   job_name:
          kubernetes-nodes-cadvisor\n#   kubernetes_sd_configs:\n#   - role:
          node\n#   relabel_configs:\n#   - action: labelmap\n#     regex:
          __meta_kubernetes_node_label_(.+)\n#   - replacement:
          kubernetes.default.svc:443\n#     target_label: __address__\n#   -
          regex: (.+)\n#     replacement:
          /api/v1/nodes/$1/proxy/metrics/cadvisor\n#     source_labels:\n#     -
          __meta_kubernetes_node_name\n#     target_label: __metrics_path__\n#  
          scheme: https\n#   tls_config:\n#     ca_file:
          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\n#    
          insecure_skip_verify: true\n# - job_name:
          kubernetes-service-endpoints\n#   kubernetes_sd_configs:\n#   - role:
          endpoints\n#   relabel_configs:\n#   - action: keep\n#     regex:
          true\n#     source_labels:\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_scrape\n#   -
          action: replace\n#     regex: (https?)\n#     source_labels:\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_scheme\n#    
          target_label: __scheme__\n#   - action: replace\n#     regex:
          (.+)\n#     source_labels:\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_path\n#    
          target_label: __metrics_path__\n#   - action: replace\n#     regex:
          ([^:]+)(?::\\d+)?;(\\d+)\n#     replacement: $1:$2\n#    
          source_labels:\n#     - __address__\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_port\n#    
          target_label: __address__\n#   - action: labelmap\n#     regex:
          __meta_kubernetes_service_label_(.+)\n#   - action: replace\n#    
          source_labels:\n#     - __meta_kubernetes_namespace\n#    
          target_label: kubernetes_namespace\n#   - action: replace\n#    
          source_labels:\n#     - __meta_kubernetes_service_name\n#    
          target_label: kubernetes_name\n#   - action: replace\n#    
          source_labels:\n#     - __meta_kubernetes_pod_node_name\n#    
          target_label: kubernetes_node\n# - honor_labels: true\n#   job_name:
          prometheus-pushgateway\n#   kubernetes_sd_configs:\n#   - role:
          service\n#   relabel_configs:\n#   - action: keep\n#     regex:
          pushgateway\n#     source_labels:\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_probe\n# -
          job_name: kubernetes-services\n#   kubernetes_sd_configs:\n#   - role:
          service\n#   metrics_path: /probe\n#   params:\n#     module:\n#     -
          http_2xx\n#   relabel_configs:\n#   - action: keep\n#     regex:
          true\n#     source_labels:\n#     -
          __meta_kubernetes_service_annotation_prometheus_io_probe\n#   -
          source_labels:\n#     - __address__\n#     target_label:
          __param_target\n#   - replacement: blackbox\n#     target_label:
          __address__\n#   - source_labels:\n#     - __param_target\n#    
          target_label: instance\n#   - action: labelmap\n#     regex:
          __meta_kubernetes_service_label_(.+)\n#   - source_labels:\n#     -
          __meta_kubernetes_namespace\n#     target_label:
          kubernetes_namespace\n#   - source_labels:\n#     -
          __meta_kubernetes_service_name\n#     target_label: kubernetes_name\n-
          job_name: kubernetes-pods\n  kubernetes_sd_configs:\n  - role:
          pod\n    namespaces:\n        names:\n          -
          4zq6uj-maxwardle-ocp201-tst-dev\n  relabel_configs:\n  - action:
          keep\n    regex: true\n    source_labels:\n    -
          __meta_kubernetes_pod_annotation_prometheus_io_scrape\n  - action:
          replace\n    regex: (.+)\n    source_labels:\n    -
          __meta_kubernetes_pod_annotation_prometheus_io_path\n    target_label:
          __metrics_path__\n  - action: replace\n    regex:
          ([^:]+)(?::\\d+)?;(\\d+)\n    replacement: $1:$2\n   
          source_labels:\n    - __address__\n    -
          __meta_kubernetes_pod_annotation_prometheus_io_port\n    target_label:
          __address__\n  - action: labelmap\n    regex:
          __meta_kubernetes_pod_label_(.+)\n  - action: replace\n   
          source_labels:\n    - __meta_kubernetes_namespace\n    target_label:
          kubernetes_namespace\n  - action: replace\n    source_labels:\n    -
          __meta_kubernetes_pod_name\n    target_label:
          kubernetes_pod_name\n","rules":"{}\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"app":"prometheus","chart":"prometheus-9.1.2","component":"maxwardle-prometheus","heritage":"Tiller","release":"maxwardle-prometheus"},"name":"maxwardle-prometheus-maxwardle-prometheus","namespace":"4zq6uj-maxwardle-ocp201-tst-dev"}}
      labels:
        app: prometheus
        chart: prometheus-9.1.2
        component: maxwardle-prometheus
        heritage: Tiller
        release: maxwardle-prometheus
      name: maxwardle-prometheus-maxwardle-prometheus
